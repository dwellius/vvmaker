#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Enhanced AI Video Sorter
–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import os
import subprocess
from pathlib import Path

def create_test_video():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    print("üé¨ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ...")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ —Å —Ç–µ–∫—Å—Ç–æ–º
    test_video_path = "/app/test_video.mp4"
    
    cmd = [
        "ffmpeg", "-y",
        "-f", "lavfi",
        "-i", "color=c=blue:size=1920x1080:duration=30:rate=25",
        "-f", "lavfi", 
        "-i", "sine=frequency=440:duration=30",
        "-vf", """drawtext=fontfile=/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf:
                 text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Enhanced AI Video Sorter!
                 
                 –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
                 
                 –í–ê–ñ–ù–û: –ó–¥–µ—Å—å –µ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç –¥–ª—è —É—Å–ø–µ—Ö–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö!
                 
                 –°–æ–≤–µ—Ç –Ω–æ–º–µ—Ä –æ–¥–∏–Ω: –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–π –∏ —Å–º–µ—à–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç.
                 
                 –õ–∞–π—Ñ—Ö–∞–∫: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
                 
                 –ò–¥–µ—è: AI –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ –º–æ–º–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!':
                 fontsize=48:fontcolor=white:x=(w-text_w)/2:y=(h-text_h)/2:
                 box=1:boxcolor=black@0.5""",
        "-c:v", "libx264", "-preset", "fast", "-crf", "23",
        "-c:a", "aac", "-shortest",
        test_video_path
    ]
    
    try:
        subprocess.run(cmd, check=True, capture_output=True)
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {test_video_path}")
        return test_video_path
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ: {e}")
        return None
    except FileNotFoundError:
        print("‚ùå FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FFmpeg –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ.")
        return None

def run_test():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Enhanced AI Video Sorter")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ
    video_path = create_test_video()
    if not video_path:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ")
        return
    
    print("\nüìù –ó–∞–ø—É—Å–∫–∞—é –∞–Ω–∞–ª–∏–∑...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –º–æ–¥—É–ª—å
        from enhanced_ai_sorter import EnhancedAIVideoSorter
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤—â–∏–∫
        sorter = EnhancedAIVideoSorter()
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ  
        clips = sorter.process_video(video_path, "test_clips")
        
        if clips:
            print(f"\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù!")
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(clips)} –∫–ª–∏–ø–æ–≤")
            print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–µ: test_clips/")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–ø–∞—Ö
            for i, clip in enumerate(clips[:3], 1):
                print(f"  {i}. {os.path.basename(clip['path'])} - –û—Ü–µ–Ω–∫–∞: {clip['ai_score']:.2f}")
        else:
            print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω - –∫–ª–∏–ø—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã")
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    try:
        if os.path.exists(video_path):
            os.remove(video_path)
            print(f"\nüóëÔ∏è –¢–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ")
    except:
        pass

if __name__ == "__main__":
    run_test()